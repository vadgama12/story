import React from 'react';
import { useTheme } from '../../appTheme';

// PlusIcon for demo purpose. Icon component should created in a different approach later on.
export const PlusIcon: React.FC<{}> = () => {
  return (
    <svg
      width='12'
      height='12'
      viewBox='0 0 12 12'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M12 6C12 6.41421 11.6642 6.75 11.25 6.75H6.75V11.25C6.75 11.6642 6.41421 12 6 12V12C5.58579 12 5.25 11.6642 5.25 11.25V6.75H0.75C0.335786 6.75 0 6.41421 0 6V6C0 5.58579 0.335786 5.25 0.75 5.25H5.25V0.75C5.25 0.335786 5.58579 0 6 0V0C6.41421 0 6.75 0.335786 6.75 0.75V5.25H11.25C11.6642 5.25 12 5.58579 12 6V6Z'
        fill='currentColor'
      />
    </svg>
  );
};

// LeadingIcon for demo purpose. Icon component should created in a different approach later on.
export const LeadingIcon: React.FC<{}> = () => {
  return (
    <svg
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M16 12C16 15.866 12.866 19 9 19C5.13401 19 2 15.866 2 12C2 8.13401 5.13401 5 9 5C12.866 5 16 8.13401 16 12Z'
        stroke='currentColor'
        strokeWidth='2'
      />
      <path
        d='M22 12C22 15.866 18.866 19 15 19C11.134 19 8 15.866 8 12C8 8.13401 11.134 5 15 5C18.866 5 22 8.13401 22 12Z'
        stroke='currentColor'
        strokeWidth='2'
      />
    </svg>
  );
};

// StarIconOnCardHeader for demo purpose. Icon component should created in a different approach later on.
export const StarIconOnCardHeader: React.FC<{}> = () => {
  return (
    <svg
      width='14'
      height='13'
      viewBox='0 0 14 13'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M7 0L13.6574 4.83688L11.1145 12.6631H2.8855L0.342604 4.83688L7 0Z'
        fill='currentColor'
      />
    </svg>
  );
};

// MobileCheckedIcon for demo purpose. Icon component should created in a different approach later on.
export const MobileCheckedIcon: React.FC<{}> = () => {
  return (
    <svg
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M4 21V3C4 1.9 4.9 1.01 6 1.01L16 1C17.1 1 18 1.9 18 3V7H16V6H6V18H16V17H18V21C18 22.1 17.1 23 16 23H6C4.9 23 4 22.1 4 21ZM16 21V20H6V21H16ZM6 3H16V4H6V3ZM21.2 9.55L19.8 8.15L14.75 13.2L12.4 10.85L11 12.25L14.75 16L21.2 9.55Z'
        fill='currentColor'
      />
    </svg>
  );
};

// DotIcon for demo purpose. Icon component should created in a different approach later on.
export const DotIcon: React.FC<{}> = () => {
  return (
    <svg
      width='25'
      height='24'
      viewBox='0 0 25 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M12.667 18C15.9807 18 18.667 15.3137 18.667 12C18.667 8.68629 15.9807 6 12.667 6C9.35328 6 6.66699 8.68629 6.66699 12C6.66699 15.3137 9.35328 18 12.667 18Z'
        fill='currentColor'
      />
    </svg>
  );
};

// TriangleIcon for demo purpose. Icon component should created in a different approach later on.
export const TriangleIcon: React.FC<{}> = () => {
  return (
    <svg
      width='25'
      height='24'
      viewBox='0 0 25 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M7.34162 17L12.6006 7.98464L17.8595 17H7.34162Z'
        stroke='currentColor'
        stroke-width='2'
      />
    </svg>
  );
};

// TriangleFilledIcon for demo purpose. Icon component should created in a different approach later on.
export const TriangleFilledIcon: React.FC<{}> = () => {
  return (
    <svg
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M12 6L19 18H5L12 6Z'
        fill='currentColor'
      />
    </svg>
  );
};

// SquareFilledIcon for demo purpose. Icon component should created in a different approach later on.
export const SquareFilledIcon: React.FC<{}> = () => {
  return (
    <svg
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <rect x='6' y='6' width='12' height='12' fill='currentColor' />
    </svg>
  );
};

// PolygonFilledIcon for demo purpose. Icon component should created in a different approach later on.
export const PolygonFilledIcon: React.FC<{}> = () => {
  return (
    <svg
      width='24'
      height='24'
      viewBox='0 0 24 24'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M12 5L18.6574 9.83688L16.1145 17.6631H7.8855L5.3426 9.83688L12 5Z'
        fill='currentColor'
      />
    </svg>
  );
};

// AgoshLogoIcon for demo purpose. Icon component should created in a different approach later on.
export const AgoshLogoIcon: React.FC<{}> = () => {
  const theme = useTheme();
  return (
    <svg
      width='142'
      height='40'
      viewBox='0 0 142 40'
      fill='none'
      xmlns='http://www.w3.org/2000/svg'
    >
      <path
        d='M48.5601 30L53.2921 10.82H59.4801L64.2401 30H61.1041L60.0681 25.884H52.7041L51.6681 30H48.5601ZM55.7001 13.424L53.3201 23.14H59.4521L57.1001 13.424H55.7001Z'
        fill='currentColor'
      />
      <path
        d='M78.627 31.904C78.627 34.9653 76.415 36.496 71.991 36.496C69.863 36.496 68.2857 36.2067 67.259 35.628C66.2324 35.0493 65.719 33.9947 65.719 32.464C65.719 31.7733 65.887 31.176 66.223 30.672C66.559 30.1867 67.1004 29.6547 67.847 29.076C67.231 28.6653 66.923 27.984 66.923 27.032C66.923 26.6587 67.175 26.052 67.679 25.212L67.931 24.792C66.587 23.9893 65.915 22.5893 65.915 20.592C65.915 18.912 66.419 17.68 67.427 16.896C68.435 16.112 69.7977 15.72 71.515 15.72C72.3364 15.72 73.1484 15.8133 73.951 16L74.371 16.084L78.711 15.972V18.436L76.387 18.296C76.891 18.9493 77.143 19.7147 77.143 20.592C77.143 22.4213 76.6764 23.6907 75.743 24.4C74.8284 25.0907 73.391 25.436 71.431 25.436C70.9457 25.436 70.535 25.3987 70.199 25.324C69.9377 25.9587 69.807 26.4533 69.807 26.808C69.807 27.144 69.975 27.3773 70.311 27.508C70.6657 27.6387 71.5057 27.7133 72.831 27.732C75.0524 27.7507 76.5737 28.0493 77.395 28.628C78.2164 29.2067 78.627 30.2987 78.627 31.904ZM68.715 32.184C68.715 32.8373 68.9764 33.304 69.499 33.584C70.0217 33.864 70.9177 34.004 72.187 34.004C74.4457 34.004 75.575 33.36 75.575 32.072C75.575 31.344 75.3697 30.8773 74.959 30.672C74.567 30.4853 73.7737 30.3827 72.579 30.364L69.835 30.196C69.4244 30.532 69.135 30.84 68.967 31.12C68.799 31.4187 68.715 31.7733 68.715 32.184ZM68.939 20.592C68.939 21.4507 69.1444 22.0853 69.555 22.496C69.9657 22.888 70.6284 23.084 71.543 23.084C72.4577 23.084 73.111 22.888 73.503 22.496C73.9137 22.0853 74.119 21.4507 74.119 20.592C74.119 19.7333 73.9137 19.108 73.503 18.716C73.0924 18.3053 72.4297 18.1 71.515 18.1C69.7977 18.1 68.939 18.9307 68.939 20.592Z'
        fill='currentColor'
      />
      <path
        d='M81.858 17.512C82.8286 16.2987 84.434 15.692 86.674 15.692C88.914 15.692 90.51 16.2987 91.462 17.512C92.4326 18.7253 92.918 20.5453 92.918 22.972C92.918 25.3987 92.4513 27.228 91.518 28.46C90.5846 29.692 88.97 30.308 86.674 30.308C84.378 30.308 82.7633 29.692 81.83 28.46C80.8966 27.228 80.43 25.3987 80.43 22.972C80.43 20.5453 80.906 18.7253 81.858 17.512ZM84.154 26.612C84.5833 27.3587 85.4233 27.732 86.674 27.732C87.9246 27.732 88.7646 27.3587 89.194 26.612C89.6233 25.8653 89.838 24.6427 89.838 22.944C89.838 21.2453 89.6046 20.0413 89.138 19.332C88.69 18.6227 87.8686 18.268 86.674 18.268C85.4793 18.268 84.6486 18.6227 84.182 19.332C83.734 20.0413 83.51 21.2453 83.51 22.944C83.51 24.6427 83.7246 25.8653 84.154 26.612Z'
        fill='currentColor'
      />
      <path
        d='M105.666 18.884C103.463 18.5853 101.867 18.436 100.878 18.436C99.8883 18.436 99.1976 18.5573 98.8056 18.8C98.4323 19.024 98.2456 19.388 98.2456 19.892C98.2456 20.396 98.451 20.7507 98.8616 20.956C99.291 21.1613 100.28 21.404 101.83 21.684C103.398 21.9453 104.508 22.3653 105.162 22.944C105.815 23.5227 106.142 24.5493 106.142 26.024C106.142 27.4987 105.666 28.5813 104.714 29.272C103.78 29.9627 102.408 30.308 100.598 30.308C99.459 30.308 98.0216 30.1493 96.2856 29.832L95.4176 29.692L95.5296 27.144C97.7696 27.4427 99.3843 27.592 100.374 27.592C101.363 27.592 102.063 27.4707 102.474 27.228C102.903 26.9853 103.118 26.584 103.118 26.024C103.118 25.464 102.912 25.0813 102.502 24.876C102.11 24.652 101.148 24.4187 99.6176 24.176C98.1056 23.9147 96.995 23.5133 96.2856 22.972C95.5763 22.4307 95.2216 21.4413 95.2216 20.004C95.2216 18.5667 95.707 17.4933 96.6776 16.784C97.667 16.0747 98.927 15.72 100.458 15.72C101.652 15.72 103.118 15.8693 104.854 16.168L105.722 16.336L105.666 18.884Z'
        fill='currentColor'
      />
      <path
        d='M112.127 30H109.075V10.176H112.127V16.728C113.508 16.0373 114.787 15.692 115.963 15.692C117.829 15.692 119.099 16.224 119.771 17.288C120.461 18.3333 120.807 20.0693 120.807 22.496V30H117.755V22.58C117.755 21.068 117.596 19.9947 117.279 19.36C116.961 18.7253 116.289 18.408 115.263 18.408C114.367 18.408 113.471 18.5573 112.575 18.856L112.127 19.024V30Z'
        fill='currentColor'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M19.632 0.0996523C18.7168 0.457605 18.8512 0.799994 18.6289 2.20586C18.3393 4.05788 17.6982 8.78388 17.269 10.0341C16.7515 11.5246 15.7768 12.8124 14.4847 13.7127C13.1926 14.613 11.6494 15.0796 10.0766 15.0455C8.82013 15.0455 3.95452 14.1428 2.12928 13.8523C1.2089 13.7018 0.288515 13.6603 0.0610057 14.5526C-0.244064 15.6576 0.660804 15.9844 1.31748 16.3009C1.97416 16.6173 2.64634 16.9908 3.3237 17.3384C5.99177 18.7184 9.22344 19.8804 10.5626 22.3134C12.6723 26.0797 11.39 28.5387 9.76636 31.698C9.06832 33.0468 8.38062 34.3697 7.69809 35.7392C7.36717 36.4085 6.88113 37.3422 7.5378 37.9751C8.33926 38.7429 9.11486 38.0426 9.54919 37.6016L12.6051 34.5357C14.7871 32.3517 16.5813 29.9394 20.5938 30.2662C22.1837 30.4112 23.6892 31.0494 24.9009 32.0923C25.8368 33.0001 30.5318 37.9285 31.0592 38.1775C31.2391 38.2723 31.4401 38.3194 31.6433 38.3141C31.8464 38.3089 32.0448 38.2515 32.2196 38.1474C32.3943 38.0434 32.5396 37.8962 32.6415 37.7198C32.7434 37.5434 32.7986 37.3438 32.8017 37.1399C32.8017 36.5848 30.1698 31.6358 29.8234 30.9147C29.0737 29.4102 28.3549 28.3208 28.3343 26.3028C28.3273 25.1221 28.5991 23.9565 29.1276 22.9015C29.656 21.8465 30.4261 20.9321 31.3746 20.2332C31.9932 19.8076 32.6471 19.4362 33.3291 19.123L39.3892 16.0104C39.5613 15.9125 39.7067 15.7737 39.8127 15.606C39.9186 15.4384 39.9818 15.2472 39.9966 15.0493C40.0114 14.8514 39.9774 14.6528 39.8977 14.4712C39.8179 14.2896 39.6947 14.1305 39.5391 14.0079C38.9238 13.5462 37.8483 13.899 37.052 14.0079L34.415 14.4281C32.8638 14.6719 30.5473 15.2011 28.9858 15.0247C27.4446 14.8535 25.9942 14.2074 24.834 13.1753C23.6738 12.1432 22.8608 10.7758 22.5069 9.26115C22.1398 7.61146 21.9278 5.68163 21.6537 3.98525C21.3797 2.28887 21.3642 -0.569563 19.632 0.0996523ZM8.58228 17.2969C12.0156 17.6549 14.2287 16.9442 16.3848 15.2582C18.7582 13.4061 19.3269 11.5334 20.0043 8.89283C20.418 12.7784 23.4583 15.9481 26.8968 17.0168C28.6652 17.5615 29.6373 17.4266 31.4677 17.3281C31.2112 17.5002 30.9454 17.6578 30.6714 17.8001C28.8082 18.9355 27.3744 20.6603 26.5955 22.703C25.8167 24.7458 25.7372 26.9903 26.3694 29.0834C26.5555 29.7474 26.8554 30.2506 27.0416 30.8265C26.5659 30.4633 26.2039 30.0587 25.6145 29.6541C24.1965 28.657 22.541 28.0536 20.8157 27.9051C19.0905 27.7566 17.3568 28.0683 15.7902 28.8085C15.0766 29.1457 13.2049 30.3648 12.9101 30.8835C12.9567 30.5827 13.4272 29.6074 13.5823 29.1353C14.1836 27.201 14.1761 25.1277 13.5608 23.1978C12.9455 21.2679 11.7524 19.5752 10.1438 18.35L8.58228 17.2969Z'
        fill={theme.color('Primary')}
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M19.353 34.96C15.9663 35.8834 17.4451 40.7391 20.6405 39.9039C23.836 39.0686 22.5847 34.0729 19.353 34.96Z'
        fill='#DD1E5A'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M4.04329 23.5801C0.728885 24.1819 1.5717 29.1517 4.90162 28.6226C8.23153 28.0934 7.38354 22.9732 4.04329 23.5801Z'
        fill='#5A3399'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M34.8402 23.6622C34.1903 23.8477 33.6386 24.2811 33.3033 24.8697C32.9679 25.4582 32.8756 26.1551 33.046 26.8111C33.8733 30.0171 38.863 28.7773 37.9684 25.4727C37.8839 25.1463 37.7355 24.8401 37.5319 24.5718C37.3282 24.3035 37.0734 24.0786 36.7823 23.9101C36.4911 23.7416 36.1695 23.6329 35.8361 23.5903C35.5026 23.5478 35.1641 23.5722 34.8402 23.6622Z'
        fill='#FFB428'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M9.92267 5.30411C6.50486 6.1134 7.73031 11.0106 10.9878 10.3051C11.6383 10.1467 12.2023 9.74146 12.561 9.17448C12.9197 8.60751 13.0453 7.92304 12.9113 7.26507C12.7734 6.60786 12.3813 6.03235 11.821 5.66475C11.2608 5.29715 10.5781 5.16746 9.92267 5.30411Z'
        fill='#00C8FF'
      />
      <path
        fillRule='evenodd'
        clipRule='evenodd'
        d='M29.2356 5.30369C25.9212 5.82246 26.6037 10.9064 30.0888 10.341C30.7474 10.2114 31.3288 9.82687 31.7071 9.2706C32.0855 8.71433 32.2304 8.03101 32.1105 7.3684C32.0572 7.04329 31.9405 6.73192 31.767 6.45212C31.5936 6.17232 31.3669 5.92958 31.0999 5.7378C30.8328 5.54602 30.5307 5.40896 30.2108 5.33447C29.8909 5.25998 29.5595 5.24952 29.2356 5.30369Z'
        fill='#6DC852'
      />
    </svg>
  );
};
